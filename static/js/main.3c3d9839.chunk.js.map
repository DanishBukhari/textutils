{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","role","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","rows","onChange","event","target","backgroundColor","placeholder","newText","toUpperCase","showAlert","toLowerCase","nText","split","forEach","element","charAt","slice","join","navigator","clipboard","writeText","console","log","filter","length","Alert","height","alert","word","lower","capitalize","msg","About","myStyle","class","rel","href","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","abouttext","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c3d9839.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid \">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-lg-0\" >\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\"  to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\"  to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"secondary\" : \"secondary\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              > \r\n              \r\n               Enable dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    setText(newText);\r\n    props.showAlert(\"Text has been capitalized\", \"success !\");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text has been converted to lower case\", \"success !\");\r\n  };\r\n\r\n  const handleCapfirst = () => {\r\n    let nText = text.split(\" \");\r\n    let newText = \"\";\r\n    nText.forEach((element) => {\r\n      newText += element.charAt(0).toUpperCase() + element.slice(1) + \" \";\r\n    });\r\n    setText(newText);\r\n    props.showAlert(\"First characters has been capitalized\", \"success !\");\r\n  };\r\n  const handleRemoveSpcs = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been removed\", \"success !\");\r\n  };\r\n  const handleDlt = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text has been deleted.\", \"success !\");\r\n  };\r\n\r\n  const handleCopy = (event) => {\r\n    setText(event.target.value);\r\n    let newText = navigator.clipboard.writeText(text);\r\n    console.log(newText);\r\n    props.showAlert(\"Text has been copied to clipboard\", \"success ! \");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h3>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control mt-3\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            value={text}\r\n            rows=\"9\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#013258\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            placeholder=\"Enter your text here\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary btn-sm mx-1 my-1\"  onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-success btn-sm my-1 mx-1\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to Lowerrcase\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-warning btn-sm my-1 mx-1\"\r\n          onClick={handleCapfirst}\r\n        >\r\n          Capitalize first characters\r\n        </button>\r\n        <button\r\n          className=\"btn btn-info btn-sm my-1 mx-1\"\r\n          onClick={handleRemoveSpcs}\r\n        >\r\n          Remove extra spaces\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm my-1 mx-1\" onClick={handleDlt}>\r\n          Delete all\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-secondary btn-sm my-1 mx-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h4> Your text summary </h4>\r\n        <p>\r\n          {\" \"}\r\n          \r\n            {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} {\" \"}\r\n          word and {text.length} characters\r\n        </p>\r\n\r\n        <p>\r\n          {\" \"}\r\n          {0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes will be required to read\r\n        </p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length > 0 ? text : \" Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n     const   lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height:\"55px\"}}>\r\n          {props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n        \r\n        </div>\r\n           } </div>\r\n    )\r\n}","\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n      color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n      backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\"\r\n      // border: \"1px solid\",\r\n      // borderColor: props.mode === \"dark\" ? \"rgb (34, 66, 117)\" : \"black\",\r\n    }\r\n        return (\r\n            <div className= \"container\" style={myStyle}>\r\n            <h1 className=\"my-3\">About us</h1>\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n      <div class=\"accordion-item \" style={myStyle} >\r\n        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n          <button class=\"accordion-button\" type=\"button\" style={{color: props.mode === \"dark\" ? \"white\" : \"#042743\", \r\n          backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          <b>Analyze your text </b>\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\", backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}}>\r\n            We've made that sure to give you a best text analyzer. So that you can easily analyze your text.\r\n            our text analyzer will provide you the total number of words along total number of characters. Also you can get the total average time which would be required to read the whole text. And the most amazing thing is, there is no text limit. :)  \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item \" style={myStyle} >\r\n        <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n          <button class=\"accordion-button collapsed\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\", backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          <b> Free too use </b>\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\", backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}}>\r\n          As there were many text analyzers were available before, but they were not entirely free. So that our team decided to make a wonderful text analyzer which can actually be used to analyze or manipulate your text without any limits and also would be free!!!\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item \" style={myStyle}>\r\n        <h2 class=\"accordion-header\" id=\"headingThree\">\r\n          <button class=\"accordion-button collapsed\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\", backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          <b>  Our founder </b>\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\", backgroundColor: props.mode === \"dark\" ? \"#115285\": \"white\"}}>\r\n        Our founder is Mr. Syed Danish bukhari. He is a programmer and working for batter technology solutions.\r\n        to watch his upcominig projects you can follow him from the following link. \r\n    \r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/danish_aalii/\">Danish's instagram</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> \r\n    \r\n            </div>\r\n        )\r\n    }\r\n    ","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\nimport About from \"./Components/About\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n    <Router>\n      <Navbar\n        title=\" textutilis\"\n        mode={mode}\n        toggleMode={toggleMode}\n        abouttext=\"About Us\"\n      />\n\n      <Alert alert={alert} />\n\n      <Routes>\n          <Route path=\"/about\" element={<About abouttext=\"About us\" mode={mode} />}>\n          \n          </Route>\n          \n          <Route path=\"/\" element={<TextForm\n        showAlert={showAlert}\n        heading=\" Enter text to analyze \"\n        mode={mode}\n      />}>\n        \n          </Route>\n        </Routes>\n\n     </Router>\n     \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}